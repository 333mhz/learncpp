Chapter 11
Inheritance

Inheritance allows us to model an is-a relationship between two objects. 
The object being inherited from is called the parent class, 
base class, or superclass. 
The object doing the inheriting is called the child class, 
derived class, or subclass.

When a derived class inherits from a base class, 
the derived class acquires all of the members of the base class.

When a derived class is constructed, 
the base portion of the class is constructed first, 
and then the derived portion is constructed. 

In more detail:
Memory for the derived class is set aside 
(enough for both the base and derived portions).
The appropriate derived class constructor is called.
The base class object is constructed first using the appropriate base class constructor. 
If no base class constructor is specified, the default constructor will be used.
The initialization list of the derived class initializes members of the derived class.
The body of the derived class constructor executes.
Control is returned to the caller.
Destruction happens in the opposite order, 
from most-derived to most-base class.

C++ has 3 access specifiers: public, private, and protected. 
The protected access specifier allows the class the member belongs to, 
friends, and derived classes to access the protected member, but not the public.

Classes can inherit from another class publicly, privately, or protectedly. 
Classes almost always inherit publicly.

Here’s a table of all of the access specifier and inheritance types combinations:
┏━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
    Access specifier 	Access specifier 	        Access specifier 	        Access specifier 
    in base class       when inherited publicly     when inherited privately    when inherited protectedly
┣━━━━━━━━━━━╋━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
    Public	            Public	                    Private	                    Protected
┣━━━━━━━━━━━╋━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
    Private	            Inaccessible	            Inaccessible	            Inaccessible
┣━━━━━━━━━━━╋━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━┫
    Protected	        Protected	                Private	                    Protected
┗━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━┛

Derived classes can add new functions, 
change the way functions that exist in the base class work in the derived class, 
change an inherited member’s access level, or hide functionality.

Multiple inheritance enables a derived class to inherit members from more than one parent. 
You should avoid multiple inheritance as much as possible.